https://hyperpma.beanstalkapp.com/
Login: justdoit2045/Teken123#*
> Click on tab "Repositories"
> Cick on the project you want to work on
> In right hand side you will see you repositary URL
     -> In the left of your repo url you can see a a dropdown with option Https and ssh. Choose SSH
     -> Copy the SSH URL (YOu will need that for check out)
> Below the Repo URL YOu will find a link that says "Add SSH Key". (You cannot check out commit update without addning SSH key)
> For this we need to generate SSH key. For key generation, checkout, commit, update we will be using GIT. So, after you install GIT in your computer, Run "GIT Bash".
> GIT Bash is a GIT console program where we run GIT commands
> The first thing we will do is generate SSH key. Follow the following steps by running following commands steps by step
   -> ssh-keygen -t rsa
   -> It will then ask for location. Just choose the default location by pressing ENTER
   -> Then it will ask for Password. Use Teken123
   -> The it will generate some files inside the default location i.e. C:/Users/Computer_name(Regan)/.ssh/
   -> YOu will see a two files named id_rsa. Open the file with extension pub in notepad
   -> Copy the entire text in the file (This is your SSH key)
> Now go to thee previous URL where we had a link to add SSH key
> Click on "Add SSH Key"
> It may ask for a password, use Teken123#*
> Then it will ask for SSH KEY and label. Paste the SSH key and put the label "My Lap". Don't leave it blank or use names like Regan, Anwar etc
> Once you have added the SSH key now you are ready for all GIT commands

> Go to your root (C:/wamp/www/). Create a folder named dev
> Now open the GIT Bash and run the following command
  -> cd /c/wamp/www/dev [Path must tbe the absolute path to your dev folder]
> Then use the following command for check out
  -> git clone your_repo_url
> The command clone is used as checkout in SVN, It will ask for Password. we need to enter the same password that we used to generate SSH key, i.e. Teken123
> This will begin checkout. Sometimes it may get stuck in middle, this is due to low internet speed.
> The files that we pulled doesn't contain .htaccess file, we will need to add it by ourselves. GIT ignores .htaccess while commit to update
> Second thing we don't need to worry about database, baseurl configuration etc. becuase the repositary files has already placed different if else
> Now in order to pull the database, use this url "http://wsddev3.com/dev/xdev_adminer.php"
> This will ask you four things, just use the options that is inside database.php for live site
> In the left hand side you will see a link called dump
> Click on dump, you will be taken to export page, choose gzip and then go
> This will download the database.
> create a new database in your local computer and name the database according to the name used in database.php [Note. do not modify the names, this will cause problem in other programmer's computer]

> For commit(push) use this command [Each repositary has different branches/origin, for this project we will use "develop" branch]
  -> Make sure you have used cd c/wamp/www/dev/your_site_name(for current site, use projewels)
  -> git add .
  -> git commit -m "message"
  -> git push origin develop
  -> Enter the password Teken 123

> For update(pull) Use this command
  -> git pull [Make sure you have used cd c/wamp/www/dev/your_site_name(for current site, use projewels)]

> Some times we may get conflicts. We don't have normal resolve conflict command. We need to note down the files that contains conflict. And resolve it by removing unnecessaru codes like >>>>>>>>>>>>>>>>>>>>>>>>>>>>>> or ======================== or 334hhg4jgg4j24g52h4515g4j2454jh5g2jh or other
> Then check by browsing the site. If everything is fine, follow the commit and update once again

This is all about GIT. Now let us discuss the pro
